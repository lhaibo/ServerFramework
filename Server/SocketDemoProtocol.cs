// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SocketDemoProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SocketDemoProtocol {

  /// <summary>Holder for reflection information generated from SocketDemoProtocol.proto</summary>
  public static partial class SocketDemoProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for SocketDemoProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SocketDemoProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhTb2NrZXREZW1vUHJvdG9jb2wucHJvdG8SElNvY2tldERlbW9Qcm90b2Nv",
            "bCKIAwoITWFpblBhY2sSNAoLcmVxdWVzdENvZGUYASABKA4yHy5Tb2NrZXRE",
            "ZW1vUHJvdG9jb2wuUmVxdWVzdENvZGUSMgoKYWN0aW9uQ29kZRgCIAEoDjIe",
            "LlNvY2tldERlbW9Qcm90b2NvbC5BY3Rpb25Db2RlEjIKCnJldHVybkNvZGUY",
            "AyABKA4yHi5Tb2NrZXREZW1vUHJvdG9jb2wuUmV0dXJuQ29kZRIwCglsb2dp",
            "blBhY2sYBCABKAsyHS5Tb2NrZXREZW1vUHJvdG9jb2wuTG9naW5QYWNrEgsK",
            "A3N0chgFIAEoCRIuCghyb29tUGFjaxgGIAMoCzIcLlNvY2tldERlbW9Qcm90",
            "b2NvbC5Sb29tUGFjaxIyCgpwbGF5ZXJQYWNrGAcgAygLMh4uU29ja2V0RGVt",
            "b1Byb3RvY29sLlBsYXllclBhY2sSFAoMam9pblJvb21OYW1lGAggASgJEg8K",
            "B2NoYXRTdHIYCSABKAkSFAoMZXhpdEdhbWVOYW1lGAogASgJIi8KCUxvZ2lu",
            "UGFjaxIQCgh1c2VybmFtZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSJyCghS",
            "b29tUGFjaxIQCghyb29tTmFtZRgBIAEoCRIOCgZtYXhOdW0YAiABKAUSEgoK",
            "Y3VycmVudE51bRgDIAEoBRIwCglyb29tU3RhdGUYBCABKA4yHS5Tb2NrZXRE",
            "ZW1vUHJvdG9jb2wuUm9vbVN0YXRlIoYBCgpQbGF5ZXJQYWNrEhIKCnBsYXll",
            "ck5hbWUYASABKAkSEAoId2luQ291bnQYAiABKAUSEAoIcGxheWVySUQYAyAB",
            "KAkSCgoCaHAYBCABKAUSNAoLcG9zdGlvblBhY2sYBSABKAsyHy5Tb2NrZXRE",
            "ZW1vUHJvdG9jb2wuUG9zdGlvblBhY2siMQoLUG9zdGlvblBhY2sSCQoBeBgB",
            "IAEoAhIJCgF5GAIgASgCEgwKBHJvdFoYAyABKAIqPAoLUmVxdWVzdENvZGUS",
            "DwoLUmVxdWVzdE5vbmUQABIICgRVc2VyEAESCAoEUm9vbRACEggKBEdhbWUQ",
            "AyovCglSb29tU3RhdGUSDAoId2FpdHRpbmcQABIKCgZnYW1pbmcQARIICgRm",
            "dWxsEAIq1AEKCkFjdGlvbkNvZGUSDgoKQWN0aW9uTm9uZRAAEgkKBUxvZ29u",
            "EAESCQoFTG9naW4QAhINCglDcmVhdFJvb20QAxIOCgpTZWFyY2hSb29tEAQS",
            "DgoKUGxheWVyTGlzdBAFEgwKCEpvaW5Sb29tEAYSCAoERXhpdBAHEggKBENo",
            "YXQQCBINCglTdGFydEdhbWUQCRITCg9TZXJ2ZXJTdGFydEdhbWUQChIPCgtV",
            "cGRhdGVTdGF0ZRALEgwKCFVwZGF0ZUhwEAwSDAoIR2FtZUV4aXQQDSo/CgpS",
            "ZXR1cm5Db2RlEg4KClJldHVybk5vbmUQABILCgdTdWNjZWVkEAESCAoERmFp",
            "bBACEgoKBk5vUm9vbRADYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SocketDemoProtocol.RequestCode), typeof(global::SocketDemoProtocol.RoomState), typeof(global::SocketDemoProtocol.ActionCode), typeof(global::SocketDemoProtocol.ReturnCode), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketDemoProtocol.MainPack), global::SocketDemoProtocol.MainPack.Parser, new[]{ "RequestCode", "ActionCode", "ReturnCode", "LoginPack", "Str", "RoomPack", "PlayerPack", "JoinRoomName", "ChatStr", "ExitGameName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketDemoProtocol.LoginPack), global::SocketDemoProtocol.LoginPack.Parser, new[]{ "Username", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketDemoProtocol.RoomPack), global::SocketDemoProtocol.RoomPack.Parser, new[]{ "RoomName", "MaxNum", "CurrentNum", "RoomState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketDemoProtocol.PlayerPack), global::SocketDemoProtocol.PlayerPack.Parser, new[]{ "PlayerName", "WinCount", "PlayerID", "Hp", "PostionPack" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketDemoProtocol.PostionPack), global::SocketDemoProtocol.PostionPack.Parser, new[]{ "X", "Y", "RotZ" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RequestCode {
    [pbr::OriginalName("RequestNone")] RequestNone = 0,
    /// <summary>
    ///用户
    /// </summary>
    [pbr::OriginalName("User")] User = 1,
    /// <summary>
    ///房间
    /// </summary>
    [pbr::OriginalName("Room")] Room = 2,
    /// <summary>
    ///游戏
    /// </summary>
    [pbr::OriginalName("Game")] Game = 3,
  }

  public enum RoomState {
    /// <summary>
    ///等待加入
    /// </summary>
    [pbr::OriginalName("waitting")] Waitting = 0,
    /// <summary>
    ///游戏中
    /// </summary>
    [pbr::OriginalName("gaming")] Gaming = 1,
    /// <summary>
    ///房间人数已满
    /// </summary>
    [pbr::OriginalName("full")] Full = 2,
  }

  public enum ActionCode {
    [pbr::OriginalName("ActionNone")] ActionNone = 0,
    /// <summary>
    ///注册
    /// </summary>
    [pbr::OriginalName("Logon")] Logon = 1,
    /// <summary>
    ///登录
    /// </summary>
    [pbr::OriginalName("Login")] Login = 2,
    /// <summary>
    ///创建房间
    /// </summary>
    [pbr::OriginalName("CreatRoom")] CreatRoom = 3,
    /// <summary>
    ///查询房间
    /// </summary>
    [pbr::OriginalName("SearchRoom")] SearchRoom = 4,
    /// <summary>
    ///获取玩家列表
    /// </summary>
    [pbr::OriginalName("PlayerList")] PlayerList = 5,
    /// <summary>
    ///加入房间
    /// </summary>
    [pbr::OriginalName("JoinRoom")] JoinRoom = 6,
    /// <summary>
    ///离开房间
    /// </summary>
    [pbr::OriginalName("Exit")] Exit = 7,
    /// <summary>
    ///聊天
    /// </summary>
    [pbr::OriginalName("Chat")] Chat = 8,
    /// <summary>
    ///通知开始游戏
    /// </summary>
    [pbr::OriginalName("StartGame")] StartGame = 9,
    /// <summary>
    ///正式开始游戏,游戏初始化
    /// </summary>
    [pbr::OriginalName("ServerStartGame")] ServerStartGame = 10,
    /// <summary>
    ///状态同步
    /// </summary>
    [pbr::OriginalName("UpdateState")] UpdateState = 11,
    /// <summary>
    ///血量同步
    /// </summary>
    [pbr::OriginalName("UpdateHp")] UpdateHp = 12,
    /// <summary>
    ///退出游戏
    /// </summary>
    [pbr::OriginalName("GameExit")] GameExit = 13,
  }

  public enum ReturnCode {
    [pbr::OriginalName("ReturnNone")] ReturnNone = 0,
    /// <summary>
    ///成功
    /// </summary>
    [pbr::OriginalName("Succeed")] Succeed = 1,
    /// <summary>
    ///失败
    /// </summary>
    [pbr::OriginalName("Fail")] Fail = 2,
    /// <summary>
    ///没有房间
    /// </summary>
    [pbr::OriginalName("NoRoom")] NoRoom = 3,
  }

  #endregion

  #region Messages
  public sealed partial class MainPack : pb::IMessage<MainPack> {
    private static readonly pb::MessageParser<MainPack> _parser = new pb::MessageParser<MainPack>(() => new MainPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MainPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketDemoProtocol.SocketDemoProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack(MainPack other) : this() {
      requestCode_ = other.requestCode_;
      actionCode_ = other.actionCode_;
      returnCode_ = other.returnCode_;
      loginPack_ = other.loginPack_ != null ? other.loginPack_.Clone() : null;
      str_ = other.str_;
      roomPack_ = other.roomPack_.Clone();
      playerPack_ = other.playerPack_.Clone();
      joinRoomName_ = other.joinRoomName_;
      chatStr_ = other.chatStr_;
      exitGameName_ = other.exitGameName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack Clone() {
      return new MainPack(this);
    }

    /// <summary>Field number for the "requestCode" field.</summary>
    public const int RequestCodeFieldNumber = 1;
    private global::SocketDemoProtocol.RequestCode requestCode_ = global::SocketDemoProtocol.RequestCode.RequestNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketDemoProtocol.RequestCode RequestCode {
      get { return requestCode_; }
      set {
        requestCode_ = value;
      }
    }

    /// <summary>Field number for the "actionCode" field.</summary>
    public const int ActionCodeFieldNumber = 2;
    private global::SocketDemoProtocol.ActionCode actionCode_ = global::SocketDemoProtocol.ActionCode.ActionNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketDemoProtocol.ActionCode ActionCode {
      get { return actionCode_; }
      set {
        actionCode_ = value;
      }
    }

    /// <summary>Field number for the "returnCode" field.</summary>
    public const int ReturnCodeFieldNumber = 3;
    private global::SocketDemoProtocol.ReturnCode returnCode_ = global::SocketDemoProtocol.ReturnCode.ReturnNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketDemoProtocol.ReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    /// <summary>Field number for the "loginPack" field.</summary>
    public const int LoginPackFieldNumber = 4;
    private global::SocketDemoProtocol.LoginPack loginPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketDemoProtocol.LoginPack LoginPack {
      get { return loginPack_; }
      set {
        loginPack_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 5;
    private string str_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return str_; }
      set {
        str_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomPack" field.</summary>
    public const int RoomPackFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SocketDemoProtocol.RoomPack> _repeated_roomPack_codec
        = pb::FieldCodec.ForMessage(50, global::SocketDemoProtocol.RoomPack.Parser);
    private readonly pbc::RepeatedField<global::SocketDemoProtocol.RoomPack> roomPack_ = new pbc::RepeatedField<global::SocketDemoProtocol.RoomPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketDemoProtocol.RoomPack> RoomPack {
      get { return roomPack_; }
    }

    /// <summary>Field number for the "playerPack" field.</summary>
    public const int PlayerPackFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SocketDemoProtocol.PlayerPack> _repeated_playerPack_codec
        = pb::FieldCodec.ForMessage(58, global::SocketDemoProtocol.PlayerPack.Parser);
    private readonly pbc::RepeatedField<global::SocketDemoProtocol.PlayerPack> playerPack_ = new pbc::RepeatedField<global::SocketDemoProtocol.PlayerPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketDemoProtocol.PlayerPack> PlayerPack {
      get { return playerPack_; }
    }

    /// <summary>Field number for the "joinRoomName" field.</summary>
    public const int JoinRoomNameFieldNumber = 8;
    private string joinRoomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JoinRoomName {
      get { return joinRoomName_; }
      set {
        joinRoomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatStr" field.</summary>
    public const int ChatStrFieldNumber = 9;
    private string chatStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChatStr {
      get { return chatStr_; }
      set {
        chatStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exitGameName" field.</summary>
    public const int ExitGameNameFieldNumber = 10;
    private string exitGameName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExitGameName {
      get { return exitGameName_; }
      set {
        exitGameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MainPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MainPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestCode != other.RequestCode) return false;
      if (ActionCode != other.ActionCode) return false;
      if (ReturnCode != other.ReturnCode) return false;
      if (!object.Equals(LoginPack, other.LoginPack)) return false;
      if (Str != other.Str) return false;
      if(!roomPack_.Equals(other.roomPack_)) return false;
      if(!playerPack_.Equals(other.playerPack_)) return false;
      if (JoinRoomName != other.JoinRoomName) return false;
      if (ChatStr != other.ChatStr) return false;
      if (ExitGameName != other.ExitGameName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestCode != global::SocketDemoProtocol.RequestCode.RequestNone) hash ^= RequestCode.GetHashCode();
      if (ActionCode != global::SocketDemoProtocol.ActionCode.ActionNone) hash ^= ActionCode.GetHashCode();
      if (ReturnCode != global::SocketDemoProtocol.ReturnCode.ReturnNone) hash ^= ReturnCode.GetHashCode();
      if (loginPack_ != null) hash ^= LoginPack.GetHashCode();
      if (Str.Length != 0) hash ^= Str.GetHashCode();
      hash ^= roomPack_.GetHashCode();
      hash ^= playerPack_.GetHashCode();
      if (JoinRoomName.Length != 0) hash ^= JoinRoomName.GetHashCode();
      if (ChatStr.Length != 0) hash ^= ChatStr.GetHashCode();
      if (ExitGameName.Length != 0) hash ^= ExitGameName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestCode != global::SocketDemoProtocol.RequestCode.RequestNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestCode);
      }
      if (ActionCode != global::SocketDemoProtocol.ActionCode.ActionNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ActionCode);
      }
      if (ReturnCode != global::SocketDemoProtocol.ReturnCode.ReturnNone) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ReturnCode);
      }
      if (loginPack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LoginPack);
      }
      if (Str.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Str);
      }
      roomPack_.WriteTo(output, _repeated_roomPack_codec);
      playerPack_.WriteTo(output, _repeated_playerPack_codec);
      if (JoinRoomName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(JoinRoomName);
      }
      if (ChatStr.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ChatStr);
      }
      if (ExitGameName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ExitGameName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestCode != global::SocketDemoProtocol.RequestCode.RequestNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestCode);
      }
      if (ActionCode != global::SocketDemoProtocol.ActionCode.ActionNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionCode);
      }
      if (ReturnCode != global::SocketDemoProtocol.ReturnCode.ReturnNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (loginPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginPack);
      }
      if (Str.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      size += roomPack_.CalculateSize(_repeated_roomPack_codec);
      size += playerPack_.CalculateSize(_repeated_playerPack_codec);
      if (JoinRoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JoinRoomName);
      }
      if (ChatStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChatStr);
      }
      if (ExitGameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExitGameName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MainPack other) {
      if (other == null) {
        return;
      }
      if (other.RequestCode != global::SocketDemoProtocol.RequestCode.RequestNone) {
        RequestCode = other.RequestCode;
      }
      if (other.ActionCode != global::SocketDemoProtocol.ActionCode.ActionNone) {
        ActionCode = other.ActionCode;
      }
      if (other.ReturnCode != global::SocketDemoProtocol.ReturnCode.ReturnNone) {
        ReturnCode = other.ReturnCode;
      }
      if (other.loginPack_ != null) {
        if (loginPack_ == null) {
          LoginPack = new global::SocketDemoProtocol.LoginPack();
        }
        LoginPack.MergeFrom(other.LoginPack);
      }
      if (other.Str.Length != 0) {
        Str = other.Str;
      }
      roomPack_.Add(other.roomPack_);
      playerPack_.Add(other.playerPack_);
      if (other.JoinRoomName.Length != 0) {
        JoinRoomName = other.JoinRoomName;
      }
      if (other.ChatStr.Length != 0) {
        ChatStr = other.ChatStr;
      }
      if (other.ExitGameName.Length != 0) {
        ExitGameName = other.ExitGameName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestCode = (global::SocketDemoProtocol.RequestCode) input.ReadEnum();
            break;
          }
          case 16: {
            ActionCode = (global::SocketDemoProtocol.ActionCode) input.ReadEnum();
            break;
          }
          case 24: {
            ReturnCode = (global::SocketDemoProtocol.ReturnCode) input.ReadEnum();
            break;
          }
          case 34: {
            if (loginPack_ == null) {
              LoginPack = new global::SocketDemoProtocol.LoginPack();
            }
            input.ReadMessage(LoginPack);
            break;
          }
          case 42: {
            Str = input.ReadString();
            break;
          }
          case 50: {
            roomPack_.AddEntriesFrom(input, _repeated_roomPack_codec);
            break;
          }
          case 58: {
            playerPack_.AddEntriesFrom(input, _repeated_playerPack_codec);
            break;
          }
          case 66: {
            JoinRoomName = input.ReadString();
            break;
          }
          case 74: {
            ChatStr = input.ReadString();
            break;
          }
          case 82: {
            ExitGameName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginPack : pb::IMessage<LoginPack> {
    private static readonly pb::MessageParser<LoginPack> _parser = new pb::MessageParser<LoginPack>(() => new LoginPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketDemoProtocol.SocketDemoProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack(LoginPack other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack Clone() {
      return new LoginPack(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    /// <summary>
    ///用户名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    ///密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginPack other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomPack : pb::IMessage<RoomPack> {
    private static readonly pb::MessageParser<RoomPack> _parser = new pb::MessageParser<RoomPack>(() => new RoomPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketDemoProtocol.SocketDemoProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack(RoomPack other) : this() {
      roomName_ = other.roomName_;
      maxNum_ = other.maxNum_;
      currentNum_ = other.currentNum_;
      roomState_ = other.roomState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack Clone() {
      return new RoomPack(this);
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxNum" field.</summary>
    public const int MaxNumFieldNumber = 2;
    private int maxNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxNum {
      get { return maxNum_; }
      set {
        maxNum_ = value;
      }
    }

    /// <summary>Field number for the "currentNum" field.</summary>
    public const int CurrentNumFieldNumber = 3;
    private int currentNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentNum {
      get { return currentNum_; }
      set {
        currentNum_ = value;
      }
    }

    /// <summary>Field number for the "roomState" field.</summary>
    public const int RoomStateFieldNumber = 4;
    private global::SocketDemoProtocol.RoomState roomState_ = global::SocketDemoProtocol.RoomState.Waitting;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketDemoProtocol.RoomState RoomState {
      get { return roomState_; }
      set {
        roomState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (MaxNum != other.MaxNum) return false;
      if (CurrentNum != other.CurrentNum) return false;
      if (RoomState != other.RoomState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (MaxNum != 0) hash ^= MaxNum.GetHashCode();
      if (CurrentNum != 0) hash ^= CurrentNum.GetHashCode();
      if (RoomState != global::SocketDemoProtocol.RoomState.Waitting) hash ^= RoomState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (MaxNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxNum);
      }
      if (CurrentNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrentNum);
      }
      if (RoomState != global::SocketDemoProtocol.RoomState.Waitting) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RoomState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (MaxNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNum);
      }
      if (CurrentNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentNum);
      }
      if (RoomState != global::SocketDemoProtocol.RoomState.Waitting) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomPack other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.MaxNum != 0) {
        MaxNum = other.MaxNum;
      }
      if (other.CurrentNum != 0) {
        CurrentNum = other.CurrentNum;
      }
      if (other.RoomState != global::SocketDemoProtocol.RoomState.Waitting) {
        RoomState = other.RoomState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            MaxNum = input.ReadInt32();
            break;
          }
          case 24: {
            CurrentNum = input.ReadInt32();
            break;
          }
          case 32: {
            RoomState = (global::SocketDemoProtocol.RoomState) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerPack : pb::IMessage<PlayerPack> {
    private static readonly pb::MessageParser<PlayerPack> _parser = new pb::MessageParser<PlayerPack>(() => new PlayerPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketDemoProtocol.SocketDemoProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack(PlayerPack other) : this() {
      playerName_ = other.playerName_;
      winCount_ = other.winCount_;
      playerID_ = other.playerID_;
      hp_ = other.hp_;
      postionPack_ = other.postionPack_ != null ? other.postionPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack Clone() {
      return new PlayerPack(this);
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 1;
    private string playerName_ = "";
    /// <summary>
    ///玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "winCount" field.</summary>
    public const int WinCountFieldNumber = 2;
    private int winCount_;
    /// <summary>
    ///玩家胜场
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WinCount {
      get { return winCount_; }
      set {
        winCount_ = value;
      }
    }

    /// <summary>Field number for the "playerID" field.</summary>
    public const int PlayerIDFieldNumber = 3;
    private string playerID_ = "";
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 4;
    private int hp_;
    /// <summary>
    ///玩家血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "postionPack" field.</summary>
    public const int PostionPackFieldNumber = 5;
    private global::SocketDemoProtocol.PostionPack postionPack_;
    /// <summary>
    ///位置信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketDemoProtocol.PostionPack PostionPack {
      get { return postionPack_; }
      set {
        postionPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerName != other.PlayerName) return false;
      if (WinCount != other.WinCount) return false;
      if (PlayerID != other.PlayerID) return false;
      if (Hp != other.Hp) return false;
      if (!object.Equals(PostionPack, other.PostionPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (WinCount != 0) hash ^= WinCount.GetHashCode();
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (postionPack_ != null) hash ^= PostionPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
      if (WinCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WinCount);
      }
      if (PlayerID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerID);
      }
      if (Hp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Hp);
      }
      if (postionPack_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PostionPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (WinCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinCount);
      }
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (postionPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostionPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerPack other) {
      if (other == null) {
        return;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.WinCount != 0) {
        WinCount = other.WinCount;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.postionPack_ != null) {
        if (postionPack_ == null) {
          PostionPack = new global::SocketDemoProtocol.PostionPack();
        }
        PostionPack.MergeFrom(other.PostionPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
          case 16: {
            WinCount = input.ReadInt32();
            break;
          }
          case 26: {
            PlayerID = input.ReadString();
            break;
          }
          case 32: {
            Hp = input.ReadInt32();
            break;
          }
          case 42: {
            if (postionPack_ == null) {
              PostionPack = new global::SocketDemoProtocol.PostionPack();
            }
            input.ReadMessage(PostionPack);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostionPack : pb::IMessage<PostionPack> {
    private static readonly pb::MessageParser<PostionPack> _parser = new pb::MessageParser<PostionPack>(() => new PostionPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostionPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketDemoProtocol.SocketDemoProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostionPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostionPack(PostionPack other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      rotZ_ = other.rotZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostionPack Clone() {
      return new PostionPack(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "rotZ" field.</summary>
    public const int RotZFieldNumber = 3;
    private float rotZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotZ {
      get { return rotZ_; }
      set {
        rotZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostionPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostionPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotZ, other.RotZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (RotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (RotZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(RotZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (RotZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostionPack other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.RotZ != 0F) {
        RotZ = other.RotZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            RotZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
